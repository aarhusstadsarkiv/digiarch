name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  check:
    name: Check version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v1
      - name: Run check_version.sh
        run: sh .github/check_version.sh
        
  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout 
        uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install & set up poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          source $HOME/.poetry/env
          poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          poetry install
      - name: Publish to PyPI
        run: poetry publish --build -u jnik-aarhus -p ${{ secrets.PYPI_PWD }}
