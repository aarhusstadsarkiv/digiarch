name: Linting & Test

on:
  push

env:
  PYTHON_VERSION: 3.11.5
  POETRY_VERSION: 1.6.1

jobs:
  linting:
    uses: aarhusstadsarkiv/acautils/.github/workflows/linting_ruff-mypy.yml@main

  version:
    name: Test Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          project_name="$(grep --color=never 'name *= *".*"' pyproject.toml)"
          project_name="${project_name%\"}"
          project_name="${project_name#*\"}"
          version_project="$(grep --color=never 'version *= *".*"' pyproject.toml)"
          version_project="${version_project%\"}"
          version_project="${version_project#*\"}"
          version_package="$(grep --color=never '__version__ *= *".*"' "$project_name"/__version__.py)"
          version_package="${version_package%\"}"
          version_package="${version_package#*\"}"
          test "$version_project" = "$version_package"

  version-acacore:
    name: Test acacore Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Fetch Acacore Version
        run: |
          acacore_remote="$(python -c 'import urllib.request,json;print(json.loads(urllib.request.urlopen("https://api.github.com/repos/aarhusstadsarkiv/acacore/tags").read())[0]["name"])')"
          acacore_remote="${acacore_remote#v}"
          acacore_package="$(grep 'acacore =' pyproject.toml | grep -oE 'tag[ ]*=[ ]*"[^"]+"')"
          acacore_package="${acacore_package#*\"}"
          acacore_package="${acacore_package#v}"
          acacore_package="${acacore_package%\"}"
          test "$acacore_remote" = "$acacore_package"

  pytest:
    name: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: actions/setup-go@v4
      - run: poetry install
      - run: go install github.com/richardlehane/siegfried/cmd/sf@latest
      - name: Unit test
        env:
          GOPATH: /home/runner/go
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report -m --fail-under=80 --skip-empty --skip-covered
