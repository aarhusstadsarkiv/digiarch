---
# Python CircleCI 2.1 configuration using Poetry

version: 2.1
commands:
  # Initialises the docker image and updates dependencies using poetry
  init:
    steps:
      # Get current code base
      - checkout

      # Restore installed dependencies from cache
      - restore_cache:
          keys:
            # If the checksum of poetry.lock changed, generate a new cache.
            - deps-{{checksum "poetry.lock"}}

      - run:
          name: Install Python dependencies
          # Install dependencies using poetry. This looks at the poetry.lock
          # file and installs new dependencies only when updates occur.
          command: poetry install

      - save_cache:
          # Saves the new cache if the checksum of poetry.lock has changed.
          key: deps-{{checksum "poetry.lock"}}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

jobs:
  format:
    docker:
      - image: circleci/python:3.7
    steps:
      - init
      # Check formatting using Black via Poetry
      - run:
          name: Check formatting using Black
          command: |
            poetry run black --check digital-archive/
            poetry run black --check tests/

  lint:
    docker:
      - image: circleci/python:3.7
    steps:
      - init
      # Check linting using flake8 via Poetry
      - run:
          name: Check linting using flake8
          command: |
            poetry run flake8 digital-archive/
            poetry run flake8 tests/

workflows:
  version: 2.1
  development:
    jobs:
      - format
      - lint
