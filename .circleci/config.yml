---
# Python CircleCI 2.1 configuration using Poetry

version: 2.1

orbs:
  # Use the codecov orb for code coverage reports
  codecov: codecov/codecov@1.0.5

commands:
  # Initialises the docker image and updates dependencies using poetry
  init:
    steps:
      # Get current code base
      - checkout
      # Restore cache
      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}
      # Install dependencies using poetry.
      - run:
          name: Install Python dependencies
          command: poetry install
      # Save to cache
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs


jobs:
  check-and-test:
    docker:
      - image: circleci/python:3.7
    steps:
      - init
      # Check formatting using Black via Poetry
      - run:
          name: Check formatting using Black
          command: |
            poetry run black --check digital_archive/
            poetry run black --check tests/
      # Check linting using flake8 via Poetry
      - run:
          name: Check linting using flake8
          command: |
            poetry run flake8 digital_archive/
            poetry run flake8 tests/
      # Check types using mypy via Poetry
      - run:
          name: Check types using mypy
          command: |
            poetry run mypy digital_archive/
            poetry run mypy tests/
      # Run tests, generate coverage report & upload to codecov
      - run:
          name: Test and generate report using pytest with coverage
          command: |
            poetry run pytest --cov=digital_archive --cov-report=xml
      - codecov/upload:
          file: coverage.xml

workflows:
  version: 2.1
  development:
    jobs:
      - check-and-test
# tbd: deploy workflow
